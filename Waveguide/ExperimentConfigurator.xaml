<UserControl x:Class="Waveguide.ExperimentConfigurator" x:Name="ExperimentConfiguratorControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ig="http://schemas.infragistics.com/xaml"
             xmlns:igDP="http://infragistics.com/DataPresenter"
             xmlns:igEditors="http://infragistics.com/Editors"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:local ="clr-namespace:Waveguide"              
             mc:Ignorable="d" 
             d:DesignHeight="650" d:DesignWidth="950"
             Loaded="UserControl_Loaded">
    
    <UserControl.Resources>        
        
        <Style x:Key="OptimizeButtonTemplate" TargetType="{x:Type igDP:CellValuePresenter}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type igDP:CellValuePresenter}">
                         <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                            <Button x:Name="VerifyPB" Margin="5,5,5,5" Click="VerifyPB_Click">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <!-- Set the default value here (if any) if you set it directly on the button that will override the trigger -->
                                        <Setter Property="Background" Value="Red" />
                                        <Setter Property="Content" Value="Unverified"/>
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=DataItem.Verified}" Value="True">
                                                <Setter Property="Background" Value="Green" />
                                                <Setter Property="Content" Value="Verified"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>            
        </Style>

          
        <local:RadioBoolToIntConverter x:Key="radioBoolToIntConverter" />

        <local:ValidationErrorsToStringConverter x:Key="validationErrorToStringConverter"/>

    </UserControl.Resources>

    


    <ScrollViewer HorizontalScrollBarVisibility="Auto" 
                  VerticalScrollBarVisibility="Auto" x:Name="ScrollView">
    <Grid>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="200"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="50"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
        <!--  PROJECT  -->
        <GroupBox Grid.Row="0" Grid.Column="1" Header="Project" FontSize="14" BorderBrush="Black" BorderThickness="1" 
                  Margin="5" x:Name="ProjectGroup">          

                <ComboBox HorizontalAlignment="Stretch" VerticalAlignment="Center" ItemsSource="{Binding Path=ProjectList}"                         
                          DisplayMemberPath="Description"
                          Margin="20,10,20,10"  
                          x:Name="ProjectComboBox"
                          SelectionChanged="ProjectComboBox_SelectionChanged">
                </ComboBox>
          
        </GroupBox>



        <Image Grid.Column="0" Grid.Row="0">
            <Image.Style>
                <Style TargetType="{x:Type Image}">                    
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=ProjectStatus}" Value="{x:Static local:ExperimentConfiguratorViewModel+STEP_STATUS.WAITING_FOR_PREDECESSOR}">
                            <Setter Property="Source" Value="/Images/blank.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=ProjectStatus}" Value="{x:Static local:ExperimentConfiguratorViewModel+STEP_STATUS.NEEDS_INPUT}">
                            <Setter Property="Source" Value="/Images/red_arrow_right.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=ProjectStatus}" Value="{x:Static local:ExperimentConfiguratorViewModel+STEP_STATUS.READY}">
                            <Setter Property="Source" Value="/Images/green_check.png"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>


        <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
        <!--  METHOD  -->
        <GroupBox Grid.Row="1" Grid.Column="1" Header="Method" FontSize="14" BorderBrush="Black" BorderThickness="1" Margin="5" 
                   IsEnabled="{Binding Path=MethodEnabled}"
                  x:Name="MethodGroup">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <ComboBox Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Center"  ItemsSource="{Binding Path=MethodList}"
                          DisplayMemberPath="Description"
                          Margin="20,10,20,10"  
                          x:Name="MethodComboBox"
                          SelectionChanged="MethodComboBox_SelectionChanged">
                </ComboBox>               

                <GroupBox Grid.Column="1" Header="Show Methods that are..." BorderBrush="Black" BorderThickness="1" Margin="10,0,10,0">
                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Margin="20,5,20,5" Orientation="Horizontal">
                        <RadioButton Content="My Methods" Margin="20,0,20,0" Checked="Method_RadioButton_Checked"
                                        IsChecked="{Binding Path=ShowPublicMethods, Converter={StaticResource radioBoolToIntConverter}, ConverterParameter=0}"/>

                        <RadioButton Content="Public Methods" Margin="20,0,20,0" Checked="Method_RadioButton_Checked"
                                        IsChecked="{Binding Path=ShowPublicMethods, Converter={StaticResource radioBoolToIntConverter}, ConverterParameter=1}"/>

                    </StackPanel>
                </GroupBox>              

            </Grid>

        </GroupBox>


        <Image Grid.Column="0" Grid.Row="1">
            <Image.Style>
                <Style TargetType="{x:Type Image}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=MethodStatus}" Value="{x:Static local:ExperimentConfiguratorViewModel+STEP_STATUS.WAITING_FOR_PREDECESSOR}">
                            <Setter Property="Source" Value="/Images/blank.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=MethodStatus}" Value="{x:Static local:ExperimentConfiguratorViewModel+STEP_STATUS.NEEDS_INPUT}">
                            <Setter Property="Source" Value="/Images/red_arrow_right.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=MethodStatus}" Value="{x:Static local:ExperimentConfiguratorViewModel+STEP_STATUS.READY}">
                            <Setter Property="Source" Value="/Images/green_check.png"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>

        

        <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
        <!--  PLATE  -->
        <GroupBox Grid.Row="2" Grid.Column="1" Header="Image Plate" FontSize="14" BorderBrush="Black" BorderThickness="1" Margin="5" IsEnabled="{Binding Path=PlateEnabled}" x:Name="PlateGroup">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <!-- BARCODE -->
                <TextBlock Grid.Column="0" Grid.Row="0" Margin="5" Text="Barcode:"/>
                
                <TextBox Grid.Column="0" Grid.Row="1" x:Name="ImagePlateBarcodeTextBox" Margin="0,0,50,0" Height="30">
                    <TextBox.Text>
                        <Binding Path="ImagePlateBarcode" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True"
                                 NotifyOnValidationError="True">                            
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <TextBlock Grid.Column="0" Grid.Row="2" Margin="2" Foreground="Red" FontWeight="Bold"                           
                   Text="{Binding ElementName=ImagePlateBarcodeTextBox, Path=(Validation.Errors)[0].ErrorContent}">
                </TextBlock>

                <!-- PLATE TYPE -->
                <TextBlock Grid.Column="1" Grid.Row="0" Margin="5" Text="Plate Type:"/>

                <ComboBox Grid.Column="1" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Center"  ItemsSource="{Binding Path=PlateTypeList}"
                          DisplayMemberPath="Description"
                          Margin="20,10,20,10"  
                          x:Name="PlateTypeComboBox"
                          SelectedItem="{Binding Path=PlateType, Mode=TwoWay}"
                          SelectionChanged="PlateTypeComboBox_SelectionChanged">
                </ComboBox>
                
                <!--  MASK  -->
                <TextBlock Grid.Column="2" Grid.Row="0" Margin="5" Text="Mask:"/>

                <ComboBox Grid.Column="2" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Center"  ItemsSource="{Binding Path=MaskList}"
                          DisplayMemberPath="Description"
                          Margin="20,10,20,10"  
                          x:Name="MaskComboBox"
                          SelectedItem="{Binding Path=Mask, Mode=TwoWay}"
                          SelectionChanged="MaskComboBox_SelectionChanged">
                </ComboBox>

            </Grid>
        </GroupBox>


        <Image Grid.Column="0" Grid.Row="2">
            <Image.Style>
                <Style TargetType="{x:Type Image}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=PlateStatus}" Value="{x:Static local:ExperimentConfiguratorViewModel+STEP_STATUS.WAITING_FOR_PREDECESSOR}">
                            <Setter Property="Source" Value="/Images/blank.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=PlateStatus}" Value="{x:Static local:ExperimentConfiguratorViewModel+STEP_STATUS.NEEDS_INPUT}">
                            <Setter Property="Source" Value="/Images/red_arrow_right.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=PlateStatus}" Value="{x:Static local:ExperimentConfiguratorViewModel+STEP_STATUS.READY}">
                            <Setter Property="Source" Value="/Images/green_check.png"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>


        <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
        <!--  COMPOUND PLATE  -->
        <GroupBox Grid.Row="3" Grid.Column="1" Header="Compound Plate (Optional)" FontSize="14" BorderBrush="Black" BorderThickness="1" Margin="5" 
                   IsEnabled="{Binding Path=CompoundPlateEnabled}"
                  x:Name="CompoundPlateGroup">
            
            
            <igDP:XamDataGrid x:Name="CompoundPlateDataGrid"                                                      
                              CellUpdated="CompoundPlateDataGrid_CellUpdated"
                              DataSource="{Binding Path=CompoundPlateList}" Margin="5" Theme="IGTheme">
                <!-- Row for each CompoundPlate in the selected method, Columns: Description, Exposure  -->


                <igDP:XamDataGrid.FieldLayoutSettings>
                    <igDP:FieldLayoutSettings  
                            AllowAddNew="False" 
                            AllowDelete="False"
                            AutoGenerateFields="False"
                            SupportDataErrorInfo="RecordsAndCells" 
                            DataErrorDisplayMode="Highlight"/>
                </igDP:XamDataGrid.FieldLayoutSettings>

                <igDP:XamDataGrid.FieldSettings>
                    <igDP:FieldSettings DataItemUpdateTrigger="OnCellValueChange" AllowEdit="True"  />                       
                </igDP:XamDataGrid.FieldSettings>

                <igDP:XamDataGrid.FieldLayouts>
                    <igDP:FieldLayout IsDefault="True">
                        <igDP:FieldLayout.Fields>

                            <igDP:Field Name="Description" Label="Compound Plate" Width="Auto" >
                                <igDP:Field.Settings>
                                    <igDP:FieldSettings AllowEdit="False" />
                                </igDP:Field.Settings>
                            </igDP:Field>

                            <igDP:Field Name="Barcode" Label="Barcode">
                                <igDP:Field.Settings>
                                    <igDP:FieldSettings AllowEdit="True">
                                        
                                    </igDP:FieldSettings>
                                </igDP:Field.Settings>                                
                            </igDP:Field>
                          
                            
                            <!--  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX -->

                            <igDP:UnboundField Label=" ">
                                <igDP:UnboundField.Settings>
                                    <igDP:FieldSettings
                                              AllowEdit="False" 
                                              AllowGroupBy="False" 
                                              AllowResize="False" 
                                              AllowSummaries="False"
                                              LabelClickAction="Nothing"
                                              LabelMaxWidth="45" CellMaxWidth="45"
                                              >
                                        <igDP:FieldSettings.CellValuePresenterStyle>
                                            <Style TargetType="{x:Type igDP:CellValuePresenter}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type igDP:CellValuePresenter}">

                                                            <Grid HorizontalAlignment="Center">
                                                                <Image x:Name="ValidIcon" ToolTip="Barcode Valid" Source="/Images/green_check_small.png" Width="24" Height="24" />
                                                                <Image x:Name="InvalidIcon" ToolTip="Barcode Invalid" Source="/Images/red_arrow_left_small.png" Width="24" Height="24" />
                                                            </Grid>

                                                            <!-- These triggers hide the icons that do not apply to a person. -->
                                                            <ControlTemplate.Triggers>
                                                                <DataTrigger Binding="{Binding Path=DataItem.BarcodeValid}" Value="False">
                                                                    <Setter TargetName="ValidIcon" Property="Visibility" Value="Hidden" />
                                                                    <Setter TargetName="InvalidIcon" Property="Visibility" Value="Visible" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Path=DataItem.BarcodeValid}" Value="True">
                                                                    <Setter TargetName="ValidIcon" Property="Visibility" Value="Visible" />
                                                                    <Setter TargetName="InvalidIcon" Property="Visibility" Value="Hidden" />
                                                                </DataTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </igDP:FieldSettings.CellValuePresenterStyle>
                                    </igDP:FieldSettings>
                                </igDP:UnboundField.Settings>
                            </igDP:UnboundField>


                   

                            <!--<igDP:UnboundField Label=" ">
                                <igDP:UnboundField.Settings>
                                    <igDP:FieldSettings
                                              AllowEdit="False"                                         
                                              LabelClickAction="Nothing" 
                                                Width="*"
                                              >
                                        <igDP:FieldSettings.CellValuePresenterStyle>
                                            <Style TargetType="{x:Type igDP:CellValuePresenter}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type igDP:CellValuePresenter}">
                                                                <TextBlock Foreground="Red" FontWeight="Bold"
                                                                           Text="{Binding ElementName=Barcode, Path=(Validation.Errors)[0].ErrorContent}"/>                                                            
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </igDP:FieldSettings.CellValuePresenterStyle>
                                    </igDP:FieldSettings>
                                </igDP:UnboundField.Settings>
                            </igDP:UnboundField>-->



                            <!--  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX -->
 
                            
                        </igDP:FieldLayout.Fields>
                    </igDP:FieldLayout>
                </igDP:XamDataGrid.FieldLayouts>

            </igDP:XamDataGrid>
        </GroupBox>

        
        
        <Image Grid.Column="0" Grid.Row="3">
            <Image.Style>
                <Style TargetType="{x:Type Image}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=CompoundPlateStatus}" Value="{x:Static local:ExperimentConfiguratorViewModel+STEP_STATUS.WAITING_FOR_PREDECESSOR}">
                            <Setter Property="Source" Value="/Images/blank.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=CompoundPlateStatus}" Value="{x:Static local:ExperimentConfiguratorViewModel+STEP_STATUS.NEEDS_INPUT}">
                            <Setter Property="Source" Value="/Images/red_arrow_right.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=CompoundPlateStatus}" Value="{x:Static local:ExperimentConfiguratorViewModel+STEP_STATUS.READY}">
                            <Setter Property="Source" Value="/Images/green_check.png"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>
        
        
        <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
        <!--  IMAGER- ROI, Optimize Imaging for each Indicator in the selected method  -->

        <GroupBox Grid.Row="4" Grid.Column="1" Header="Imager" FontSize="14" BorderBrush="Black" BorderThickness="1" Margin="5" 
                   IsEnabled="{Binding Path=ImagerEnabled}"
                  x:Name="ImagerGroup">
            
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>                    
                </Grid.ColumnDefinitions>

                <igDP:XamDataGrid Grid.Column="0" x:Name="IndicatorDataGrid" DataSource="{Binding Path=IndicatorList}" Margin="5" Theme="IGTheme">
                    <!-- Row for each Indicator in the selected method, Columns: Description, Exposure  -->


                    <igDP:XamDataGrid.FieldLayoutSettings>
                        <igDP:FieldLayoutSettings  
                            AllowAddNew="False" 
                            AllowDelete="False"
                            AutoGenerateFields="False"/>
                    </igDP:XamDataGrid.FieldLayoutSettings>

                    <igDP:XamDataGrid.FieldSettings>
                        <igDP:FieldSettings DataItemUpdateTrigger="OnCellValueChange" AllowEdit="True"  />
                    </igDP:XamDataGrid.FieldSettings>

                    <igDP:XamDataGrid.FieldLayouts>
                        <igDP:FieldLayout IsDefault="True">
                            <igDP:FieldLayout.Fields>

                                <igDP:Field Name="Description" Label="Indicator">
                                    <igDP:Field.Settings>
                                        <igDP:FieldSettings AllowEdit="False" LabelTextAlignment="Center"/>
                                    </igDP:Field.Settings>
                                </igDP:Field>

                                <igDP:Field Name="ExcitationFilterDesc" Label="Excitation Filter">
                                    <igDP:Field.Settings>
                                        <igDP:FieldSettings AllowEdit="False" LabelTextAlignment="Center"/>
                                    </igDP:Field.Settings>
                                </igDP:Field>

                                <igDP:Field Name="EmissionFilterDesc" Label="Emission Filter">
                                    <igDP:Field.Settings>
                                        <igDP:FieldSettings AllowEdit="False" LabelTextAlignment="Center"/>
                                    </igDP:Field.Settings>
                                </igDP:Field>

                                <igDP:Field Name="Exposure" Label="Exposure (msecs)" Width="Auto">
                                    <igDP:Field.Settings>
                                        <igDP:FieldSettings EditAsType="{x:Type sys:Int32}" LabelTextAlignment="Center">
                                            <igDP:FieldSettings.EditorStyle>
                                                <Style TargetType="{x:Type igEditors:XamNumericEditor}" >
                                                    <Setter Property="Mask" Value="nnnnn" />
                                                </Style>
                                            </igDP:FieldSettings.EditorStyle>
                                        </igDP:FieldSettings>
                                    </igDP:Field.Settings>
                                </igDP:Field>

                                <igDP:Field Name="Gain" Label="Gain" Width="Auto">
                                    <igDP:Field.Settings>
                                        <igDP:FieldSettings EditAsType="{x:Type sys:Int32}" LabelTextAlignment="Center">
                                            <igDP:FieldSettings.EditorStyle>
                                                <Style TargetType="{x:Type igEditors:XamNumericEditor}" >
                                                    <Setter Property="Mask" Value="nnn" />                                                    
                                                </Style>
                                            </igDP:FieldSettings.EditorStyle>
                                        </igDP:FieldSettings>
                                    </igDP:Field.Settings>
                                </igDP:Field>


                                <igDP:UnboundField Name="VerifyIndicator" Label="Verify" Column="5" Height="45">
                                    <igDP:UnboundField.Settings>
                                        <igDP:FieldSettings CellValuePresenterStyle="{StaticResource OptimizeButtonTemplate}" CellHeight="12" CellWidth="50" LabelTextAlignment="Center">
                                        </igDP:FieldSettings>
                                    </igDP:UnboundField.Settings>
                                </igDP:UnboundField>




                                <igDP:UnboundField Label=" ">
                                    <igDP:UnboundField.Settings>
                                        <igDP:FieldSettings
                                              AllowEdit="False" 
                                              AllowGroupBy="False" 
                                              AllowResize="False" 
                                              AllowSummaries="False"
                                              LabelClickAction="Nothing"
                                              LabelMaxWidth="45" CellMaxWidth="45"
                                              >
                                            <igDP:FieldSettings.CellValuePresenterStyle>
                                                <Style TargetType="{x:Type igDP:CellValuePresenter}">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type igDP:CellValuePresenter}">

                                                                <Grid HorizontalAlignment="Center">
                                                                    <Image x:Name="ValidIcon" ToolTip="Barcode Valid" Source="/Images/green_check_small.png" Width="24" Height="24" />
                                                                    <Image x:Name="InvalidIcon" ToolTip="Barcode Invalid" Source="/Images/red_arrow_left_small.png" Width="24" Height="24" />
                                                                </Grid>

                                                                 <!--These triggers hide the icons that do not apply to a person.--> 
                                                                <ControlTemplate.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=DataItem.Verified}" Value="False">
                                                                        <Setter TargetName="ValidIcon" Property="Visibility" Value="Hidden" />
                                                                        <Setter TargetName="InvalidIcon" Property="Visibility" Value="Visible" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Path=DataItem.Verified}" Value="True">
                                                                        <Setter TargetName="ValidIcon" Property="Visibility" Value="Visible" />
                                                                        <Setter TargetName="InvalidIcon" Property="Visibility" Value="Hidden" />
                                                                    </DataTrigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </igDP:FieldSettings.CellValuePresenterStyle>
                                        </igDP:FieldSettings>
                                    </igDP:UnboundField.Settings>
                                </igDP:UnboundField>




                            </igDP:FieldLayout.Fields>
                        </igDP:FieldLayout>
                    </igDP:XamDataGrid.FieldLayouts>

                </igDP:XamDataGrid>
                
                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Grid.Row="0" Grid.Column="0"  HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5">
                            Cycle Time<LineBreak/>(msecs)
                        </TextBlock>
                    
                        <ig:XamNumericInput Grid.Row="0" Grid.Column="1" SpinButtonDisplayMode="Always" SpinIncrement="10" Mask="nnnnn" 
                                            Value="{Binding Path=CycleTime, Mode=TwoWay}" ValueType="sys:Int32"
                                            Width="80" Height="35" x:Name="CycleTimeEdit"
                                            HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </StackPanel>

                    
                    <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="0">
                        <TextBlock Grid.Row="0" Grid.Column="0"  HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5">
                            Camera Temp<LineBreak/>(degs C)
                        </TextBlock>

                        <ig:XamNumericInput Grid.Row="0" Grid.Column="1" SpinButtonDisplayMode="Always" SpinIncrement="10"  
                                            Value="{Binding Path=Temperature, Mode=TwoWay}" ValueType="sys:Int32"
                                            Width="80" Height="35" x:Name="TemperatureEdit" Mask="[number:-90-25]"
                                            HorizontalAlignment="Left" VerticalAlignment="Center" ValueChanged="TemperatureEdit_ValueChanged"/>
                    </StackPanel>

                    <GroupBox Grid.Column="2" Grid.RowSpan="2" Header="Binning" FontSize="14" 
                              BorderBrush="Black" BorderThickness="1" Margin="5,0,5,0"
                              IsEnabled="False"> 
                        <StackPanel Orientation="Vertical">
                            <RadioButton Content="1 x 1" x:Name="Binning_1x1_RadioButton" Margin="2" IsChecked="True" Checked="Binning_1x1_RadioButton_Checked"/>
                            <RadioButton Content="2 x 2" x:Name="Binning_2x2_RadioButton" Margin="2" Checked="Binning_2x2_RadioButton_Checked"/>
                            <RadioButton Content="4 x 4" x:Name="Binning_4x4_RadioButton" Margin="2" Checked="Binning_4x4_RadioButton_Checked"/>
                            <RadioButton Content="8 x 8" x:Name="Binning_8x8_RadioButton" Margin="2" Checked="Binning_8x8_RadioButton_Checked"/>
                        </StackPanel>

                    </GroupBox>



                </Grid>

            </Grid>
        </GroupBox>


        <Image Grid.Column="0" Grid.Row="4">
            <Image.Style>
                <Style TargetType="{x:Type Image}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=ImagerStatus}" Value="{x:Static local:ExperimentConfiguratorViewModel+STEP_STATUS.WAITING_FOR_PREDECESSOR}">
                            <Setter Property="Source" Value="/Images/blank.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=ImagerStatus}" Value="{x:Static local:ExperimentConfiguratorViewModel+STEP_STATUS.NEEDS_INPUT}">
                            <Setter Property="Source" Value="/Images/red_arrow_right.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=ImagerStatus}" Value="{x:Static local:ExperimentConfiguratorViewModel+STEP_STATUS.READY}">
                            <Setter Property="Source" Value="/Images/green_check.png"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>

        <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
        <!--  Runtime Analysis  -->

        <GroupBox Grid.Row="5" Grid.Column="1" Header="Runtime Analysis" FontSize="14" BorderBrush="Black" BorderThickness="1" Margin="5" 
                   IsEnabled="{Binding Path=RuntimeAnalysisEnabled}"
                  x:Name="RuntimeAnalysisGroup">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>                 
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="1.5*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <GroupBox Grid.Column="0" x:Name="StaticRatioGroup">

                        <GroupBox.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="StaticRatio"/>
                                <Image Margin="10,0,0,0" Width="24" Height="24">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=StaticRatioStatus}" Value="{x:Static local:ExperimentConfiguratorViewModel+STEP_STATUS.WAITING_FOR_PREDECESSOR}">
                                                    <Setter Property="Source" Value="/Images/blank.png"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=StaticRatioStatus}" Value="{x:Static local:ExperimentConfiguratorViewModel+STEP_STATUS.NEEDS_INPUT}">
                                                    <Setter Property="Source" Value="/Images/warning.png"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=StaticRatioStatus}" Value="{x:Static local:ExperimentConfiguratorViewModel+STEP_STATUS.READY}">
                                                    <Setter Property="Source" Value="/Images/green_check_small.png"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </StackPanel>
                        </GroupBox.Header>

                        <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        
                        <TextBlock Grid.Row="0" Text="Number of Fo Frames"
                               HorizontalAlignment="Center" 
                               VerticalAlignment="Top" Margin="0"/>                       

                        <ig:XamNumericInput Grid.Row="1" SpinIncrement="1" SpinButtonDisplayMode="Always"
                               Width="60" 
                               HorizontalAlignment="Center"
                               VerticalAlignment="Top" Mask="{}{number:1-20}"
                               Margin="3" Value="{Binding Path=NumFoFrames}"/>
                    </Grid>
                </GroupBox>

                <GroupBox Grid.Column="1" x:Name="ControlSubtractionGroup" >
                        <GroupBox.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Control Subtraction"/>
                                <Image Margin="10,0,0,0" Width="24" Height="24">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=ControlSubtractionStatus}" Value="{x:Static local:ExperimentConfiguratorViewModel+STEP_STATUS.WAITING_FOR_PREDECESSOR}">
                                                    <Setter Property="Source" Value="/Images/blank.png"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=ControlSubtractionStatus}" Value="{x:Static local:ExperimentConfiguratorViewModel+STEP_STATUS.NEEDS_INPUT}">
                                                    <Setter Property="Source" Value="/Images/warning.png"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=ControlSubtractionStatus}" Value="{x:Static local:ExperimentConfiguratorViewModel+STEP_STATUS.READY}">
                                                    <Setter Property="Source" Value="/Images/green_check_small.png"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </StackPanel>
                        </GroupBox.Header>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        
                        <Image Grid.Row="0" MouseLeftButtonUp="ControlSubtractionPlateImage_MouseLeftButtonUp"
                               x:Name="ControlSubtractionPlateImage" Stretch="Fill"
                               Source="{Binding}"/>
                        
                        <!--<TextBlock Grid.Row="1" Text="Selected Control Wells"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>-->
                    </Grid>
                </GroupBox>

                <GroupBox Grid.Column="2" x:Name="DynamicRatioGroup"
                          IsEnabled="{Binding Path=DynamicRatioGroupEnabled}">

                        <GroupBox.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Dynamic Ratio"/>
                                <Image Margin="10,0,0,0" Width="24" Height="24">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=DynamicRatioStatus}" Value="{x:Static local:ExperimentConfiguratorViewModel+STEP_STATUS.WAITING_FOR_PREDECESSOR}">
                                                    <Setter Property="Source" Value="/Images/blank.png"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=DynamicRatioStatus}" Value="{x:Static local:ExperimentConfiguratorViewModel+STEP_STATUS.NEEDS_INPUT}">
                                                    <Setter Property="Source" Value="/Images/warning.png"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=DynamicRatioStatus}" Value="{x:Static local:ExperimentConfiguratorViewModel+STEP_STATUS.READY}">
                                                    <Setter Property="Source" Value="/Images/green_check_small.png"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </StackPanel>
                        </GroupBox.Header>

                        <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Numerator" Margin="10,10,10,0"
                                   HorizontalAlignment="Right" VerticalAlignment="Top"/>
                        <ComboBox Grid.Row="0" Grid.Column="1" 
                                  HorizontalAlignment="Stretch" VerticalAlignment="Top"  
                                  ItemsSource="{Binding Path=IndicatorList}"
                                  DisplayMemberPath="Description"
                                  Margin="0,10,0,0"  
                                  x:Name="DynamicRatioNumeratorComboBox"
                                  SelectedItem="{Binding Path=DynamicRatioNumeratorIndicator, Mode=TwoWay}"
                                  SelectionChanged="DynamicRatioNumeratorComboBox_SelectionChanged">
                        </ComboBox>

                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Denominator" Margin="10,10,10,0"
                                   HorizontalAlignment="Right" VerticalAlignment="Top"/>
                        <ComboBox Grid.Row="1" Grid.Column="1" 
                                  HorizontalAlignment="Stretch" VerticalAlignment="Top"  
                                  ItemsSource="{Binding Path=IndicatorList}"
                                  DisplayMemberPath="Description"
                                  Margin="0,10,0,0"  
                                  x:Name="DynamicRatioDenominatorComboBox"
                                  SelectedItem="{Binding Path=DynamicRatioDenominatorIndicator, Mode=TwoWay}"
                                  SelectionChanged="DynamicRatioDenominatorComboBox_SelectionChanged">
                        </ComboBox>

                    </Grid>
                </GroupBox>
                
            </Grid>
        </GroupBox>



        <Image Grid.Column="0" Grid.Row="5">
            <Image.Style>
                <Style TargetType="{x:Type Image}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=RuntimeAnalysisStatus}" Value="{x:Static local:ExperimentConfiguratorViewModel+STEP_STATUS.WAITING_FOR_PREDECESSOR}">
                            <Setter Property="Source" Value="/Images/blank.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=RuntimeAnalysisStatus}" Value="{x:Static local:ExperimentConfiguratorViewModel+STEP_STATUS.NEEDS_INPUT}">
                            <Setter Property="Source" Value="/Images/red_arrow_right.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=RuntimeAnalysisStatus}" Value="{x:Static local:ExperimentConfiguratorViewModel+STEP_STATUS.READY}">
                            <Setter Property="Source" Value="/Images/green_check.png"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>
        

        <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
        <!--  DIALOG BUTTONS  -->
        
            <Button Grid.Row="6" Grid.Column="1" Content="Start Experiment" FontSize="24" FontWeight="Bold" Foreground="Black" Background="Green" 
                    Width="Auto" Height="Auto" Padding="10"
                    HorizontalAlignment="Center" VerticalAlignment="Center"
                    IsEnabled="{Binding Path=RunEnabled}"                    
                    x:Name="StartExperimentPB" Margin="5"
                    Click="StartExperimentPB_Click"/>

    </Grid>
    </ScrollViewer>
</UserControl>
